target Chisel;

reactor Source {    
    @array(length=2048)
    output out:{=UInt(32.W)=}

    @external
    input in: {=UInt(11.W)=}

    reaction(startup) in -> out {=
        val wrPort = lf_set_array(out, lf_get(in), 1.U)
        wrPort.valid := true.B
        wrPort.bits.data := lf_get(in)
        reactionDone := wrPort.fire
    =}
}


reactor Sink {
    @array(length=2048)
    input in :{=UInt(32.W)=}
    @external
    output dummy :{=UInt(1.W)=}

    reaction(in) -> dummy {=
        val rdPort = lf_get_array(in, 2000.U, 1.U)
        rdPort.ready := true.B

        when (rdPort.fire) {
            assert(rdPort.bits.data === 42.U)
            lf_set(dummy, rdPort.bits.data(0))
        }
        reactionDone := rdPort.fire
    =}
}


main reactor {
    src = new Source()
    sink = new Sink()
    src.out -> sink.in
}