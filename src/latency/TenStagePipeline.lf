target Chisel {
    timeout: 1 usec
};



reactor Source {
    timer t(10 nsec, 1 usec)
    output out: {=UInt(32.W)=}

    state cnt: {=UInt(32.W)=}

    reaction(t) -> out {=
        lf_set(out, lf_read(cnt))
        lf_write(cnt, lf_read(cnt) + 1.U)
    =}
}

reactor Middle {
    input in: {=UInt(32.W)=}
    output out: {=UInt(32.W)=}

    reaction(in) -> out {=
        lf_set(out, lf_get(in) + 1.U)
    =}
}

reactor Sink {
    input in: {=UInt(32.W)=}

    reaction(in) {=
        printf("DataflowLatency1.lf=%d\n", lf_time_physical() - lf_time_logical())
    =}
}

main reactor {
    s = new Source()
    m1 = new Middle()
    m2 = new Middle()
    m3 = new Middle()
    m4 = new Middle()
    m5 = new Middle()
    m6 = new Middle()
    m7 = new Middle()
    m8 = new Middle()
    si = new Sink()
    s.out, m1.out, m2.out, m3.out, m4.out, m5.out, m6.out, m7.out, m8.out -> m1.in, m2.in, m3.in, m4.in, m5.in, m6.in, m7.in, m8.in, si.in
}